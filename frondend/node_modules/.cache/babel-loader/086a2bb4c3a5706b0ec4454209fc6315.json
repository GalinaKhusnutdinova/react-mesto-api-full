{"ast":null,"code":"export var BASE_URL=\"\".concat('http://khusnutdinova.student.nomoredomains.xyz'||'http://localhost:3001');// const baseUrl = `${window.location.protocol}${process.env.REACT_APP_API_URL || '//localhost:3001'}`\nexport var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},credentials:'include',body:JSON.stringify({email:email,password:password})}).then(checkResponse);};export var authorize=function authorize(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},credentials:'include',body:JSON.stringify({email:email,password:password})}).then(checkResponse);};export var getContent=function getContent(jwt){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(jwt)},credentials:'include'}).then(checkResponse);};function checkResponse(res){if(res.ok){return res.json();}return res.json().then(function(data){throw new Error(data.message);});}","map":{"version":3,"names":["BASE_URL","register","email","password","fetch","method","headers","credentials","body","JSON","stringify","then","checkResponse","authorize","getContent","jwt","Authorization","res","ok","json","data","Error","message"],"sources":["/Users/galina/dev/react-mesto-api-full/frondend/src/utils/mestoAuth.js"],"sourcesContent":["export const BASE_URL = `${'http://khusnutdinova.student.nomoredomains.xyz' || 'http://localhost:3001'}`;\n// const baseUrl = `${window.location.protocol}${process.env.REACT_APP_API_URL || '//localhost:3001'}`\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    credentials: 'include',  \n    body: JSON.stringify({ email, password }),\n  }).then(checkResponse);\n};\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    credentials: 'include',  \n    body: JSON.stringify({ email, password }),\n  }).then(checkResponse);\n};\n\nexport const getContent = (jwt) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${jwt}`,\n    },\n    credentials: 'include',  \n  }).then(checkResponse);\n};\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return res.json().then((data) => {\n    throw new Error(data.message);\n  });\n}\n"],"mappings":"AAAA,MAAO,IAAMA,SAAQ,WAAM,kDAAoD,uBAA1D,CAAd,CACP;AAEA,MAAO,IAAMC,SAAQ,CAAG,QAAXA,SAAW,CAACC,KAAD,CAAQC,QAAR,CAAqB,CAC3C,MAAOC,MAAK,WAAIJ,QAAJ,YAAuB,CACjCK,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFwB,CAGjCC,WAAW,CAAE,SAHoB,CAIjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAER,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAf,CAJ2B,CAAvB,CAAL,CAKJQ,IALI,CAKCC,aALD,CAAP,CAMD,CAPM,CASP,MAAO,IAAMC,UAAS,CAAG,QAAZA,UAAY,CAACX,KAAD,CAAQC,QAAR,CAAqB,CAC5C,MAAOC,MAAK,WAAIJ,QAAJ,YAAuB,CACjCK,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFwB,CAGjCC,WAAW,CAAE,SAHoB,CAIjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAER,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAf,CAJ2B,CAAvB,CAAL,CAKJQ,IALI,CAKCC,aALD,CAAP,CAMD,CAPM,CASP,MAAO,IAAME,WAAU,CAAG,QAAbA,WAAa,CAACC,GAAD,CAAS,CACjC,MAAOX,MAAK,WAAIJ,QAAJ,cAAyB,CACnCK,MAAM,CAAE,KAD2B,CAEnCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPU,aAAa,kBAAYD,GAAZ,CAFN,CAF0B,CAMnCR,WAAW,CAAE,SANsB,CAAzB,CAAL,CAOJI,IAPI,CAOCC,aAPD,CAAP,CAQD,CATM,CAWP,QAASA,cAAT,CAAuBK,GAAvB,CAA4B,CAC1B,GAAIA,GAAG,CAACC,EAAR,CAAY,CACV,MAAOD,IAAG,CAACE,IAAJ,EAAP,CACD,CACD,MAAOF,IAAG,CAACE,IAAJ,GAAWR,IAAX,CAAgB,SAACS,IAAD,CAAU,CAC/B,KAAM,IAAIC,MAAJ,CAAUD,IAAI,CAACE,OAAf,CAAN,CACD,CAFM,CAAP,CAGD"},"metadata":{},"sourceType":"module"}