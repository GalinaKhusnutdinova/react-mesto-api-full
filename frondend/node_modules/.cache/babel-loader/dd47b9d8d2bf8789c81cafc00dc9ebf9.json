{"ast":null,"code":"export const BASE_URL = \"https://auth.nomoreparties.co\";\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse);\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse);\n};\nexport const getContent = jwt => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${jwt}`\n    }\n  }).then(checkResponse);\n};\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n\n  return res.json().then(data => {\n    throw new Error(data.message);\n  });\n}","map":{"version":3,"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","checkResponse","authorize","getContent","jwt","Authorization","res","ok","json","data","Error","message"],"sources":["/Users/galina/dev/react-mesto-auth/src/utils/mestoAuth.js"],"sourcesContent":["export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ email, password }),\n  }).then(checkResponse);\n};\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ email, password }),\n  }).then(checkResponse);\n};\n\nexport const getContent = (jwt) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${jwt}`,\n    },\n  }).then(checkResponse);\n};\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return res.json().then((data) => {\n    throw new Error(data.message);\n  });\n}\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;EAC3C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;IACjCK,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MAAE,gBAAgB;IAAlB,CAFwB;IAGjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEP,KAAF;MAASC;IAAT,CAAf;EAH2B,CAAvB,CAAL,CAIJO,IAJI,CAICC,aAJD,CAAP;AAKD,CANM;AAQP,OAAO,MAAMC,SAAS,GAAG,CAACV,KAAD,EAAQC,QAAR,KAAqB;EAC5C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;IACjCK,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MAAE,gBAAgB;IAAlB,CAFwB;IAGjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEP,KAAF;MAASC;IAAT,CAAf;EAH2B,CAAvB,CAAL,CAIJO,IAJI,CAICC,aAJD,CAAP;AAKD,CANM;AAQP,OAAO,MAAME,UAAU,GAAIC,GAAD,IAAS;EACjC,OAAOV,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;IACnCK,MAAM,EAAE,KAD2B;IAEnCC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEPS,aAAa,EAAG,UAASD,GAAI;IAFtB;EAF0B,CAAzB,CAAL,CAMJJ,IANI,CAMCC,aAND,CAAP;AAOD,CARM;;AAUP,SAASA,aAAT,CAAuBK,GAAvB,EAA4B;EAC1B,IAAIA,GAAG,CAACC,EAAR,EAAY;IACV,OAAOD,GAAG,CAACE,IAAJ,EAAP;EACD;;EACD,OAAOF,GAAG,CAACE,IAAJ,GAAWR,IAAX,CAAiBS,IAAD,IAAU;IAC/B,MAAM,IAAIC,KAAJ,CAAUD,IAAI,CAACE,OAAf,CAAN;EACD,CAFM,CAAP;AAGD"},"metadata":{},"sourceType":"module"}